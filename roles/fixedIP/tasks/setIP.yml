---
# file: roles/common/tasks/main.yml

- name: Set temporary ansible host variable
  set_fact:
    ansible_host_final: "{{ ansible_host }}"
    ansible_host: "{{ ansible_host_tmp }}"
  when: not (interface.ip|d(False))
- name: Set Facts
  setup:

- set_fact:
  done: 0

- name: "Set windows IP interface {{ interface.name|d('Ethernet0') }}"
  block:
    - win_static_IP:
      interface: "{{ interface.name|d('Ethernet0') }}"
      ip: "{{ interface.ip|d(ansible_host_final) }}"
      gateway: "{{ interface.gateway|d(omit) }}"
      subNet: "{{ interface.subnet|d(24) }}"
      currentInterface: "{{ not (interface.ip|d(False)) }}"
    - set_fact:
      done: 1
  when: ansible_facts['os_family'] == 'Windows'

- name: set pfsense ip
  block:
    - import_tasks: pfsense.yml
    - set_fact:
      done: 1
  when: ansible_facts['os_family'] == 'FreeBSD' and 'pfSense' in ansible_facts['kernel_version']



- name: Set IP for linux
  block:
    - name: Set IP
      include_role:
        name: linux-system-roles.network
      vars:
        network_connections:
          - name: "{{ interface.name|d('ens33') }}"
            interface_name: "{{ interface.name|d('ens33') }}"
            # state: up
            type: "ethernet"
            autoconnect: yes
            ip:
              dhcp4: no
              gateway4: "{{ interface.gateway|d('0.0.0.0') }}"
              address:
                - "{{ interface.ip|d(ansible_host_final) }}/{{ interface.subnet|d(24) }}"
      when: ansible_facts['distribution'] == 'RedHat' or ansible_facts['distribution'] == 'CentOS' or ansible_facts['distribution'] =='Fedora'
    # - name: Restart network
    #   shell: systemctl restart network
  #   - name: restart systemd-networkd
  #     systemd:
  #       name: network
  #       state: restarted
  #     async: 30
  #     poll: 0
  #   - name: Wait after service restart
  #     pause:
  #       seconds: 10
  #     when: not interface.ip|d(False)
  # become: yes
  # become_user: root
  when: ansible_facts['os_family'] != 'Windows' and (ansible_facts['os_family'] != 'FreeBSD' or 'pfSense' not in ansible_facts['kernel_version'])



- name: Set unknow system IP
  fail:
    msg: "The ip of {{ inventory_hostname }} os family {{ ansible_facts['os_family'] }} have not bee changed, it coul be not take in account by the role"
  when: done|d(0) != 1



- name: Set back ansible host variable
  block:
    - name: Set back ansible host variable
      set_fact:
        ansible_host: "{{ ansible_host_final }}"
    # - name: Verify host interface post changement
    #   ping:
    #   when: ansible_facts['os_family'] != 'Windows'
    - name: Wait for the hosts network interface to come back up
      local_action:
        module: wait_for
        host: "{{ ansible_host }}"
        port: "{{ ansible_winrm_port|d(ansible_port|d(22)) }}"
        delay: 10
        state: started
      register: wait_result
      # when: ansible_facts['os_family'] == 'Windows'
  when: not interface.ip|d(False)

